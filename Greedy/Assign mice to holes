There are N Mice and N holes that are placed in a straight line. Each hole can accomodate only 1 mouse.
The positions of Mice are denoted by array A and the position of holes are denoted by array B.
A mouse can stay at his position, move one step right from x to x + 1, or move one step left from x to x âˆ’ 1. Any of these moves consumes 1 minute.
Assign mice to holes so that the time when the last mouse gets inside a hole is minimized.

Input 1:

 A = [-4, 2, 3]
 B = [0, -2, 4]
 
 Explanation 1:

 Assign the mouse at position (-4 to -2), (2 to 0) and (3 to 4).
 The number of moves required will be 2, 2 and 1 respectively.
 So, the time taken will be 2.
 
 
 
class Solution:
	def mice(self, A, B):
        ans = 0
        A.sort()
        B.sort()
        for i in range(len(A)):
            ans = max(ans, abs(A[i] - B[i]))
        return ans
