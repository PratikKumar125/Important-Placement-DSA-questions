Given a binary tree, find out whether it contains a duplicate sub-tree of size two or more, or not.

Note: Two same leaf nodes are not considered as subtree as size of a leaf node is one.

https://practice.geeksforgeeks.org/problems/duplicate-subtree-in-binary-tree/1

class Solution:
    def dupSub(self, root):
        hash={}
        def fun(root):
            if root==None:
                return "%"
            s=""
            if root.left==None and root.right==None:
                s=str(root.data)
                return s
            s+=str(root.data)
            s+=","
            s+=fun(root.left)
            s+=","
            s+=fun(root.right)
            if s not in hash:
                hash[s]=1
            else:
                hash[s]+=1
            return s
        fun(root)
        print(hash)
        for i in hash:
            if hash[i]>=2:
                return 1
        return 0
